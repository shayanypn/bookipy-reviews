{"version":3,"sources":["icons/thumb-down.svg","icons/thumb-up.svg","icons/AIRBNB.svg","icons/BOOKINGCOM.svg","icons/HOLIDU.svg","constant.js","components/Review/index.js","components/Filter/index.js","components/Pagination/index.js","actions/index.js","containers/App/index.js","serviceWorker.js","reducers/index.js","index.js","store/configureStore.js"],"names":["module","exports","iconsMap","AIRBNB","BOOKINGCOM","HOLIDU","Review","headline","score","channel","comment","positiveFeedback","negativeFeedback","author","publishedAt","onClick","className","src","alt","thumbUp","thumbDown","format","element","Filter","items","length","id","map","filter","index","key","type","value","Pagination","active","aria-label","item","num","text","setReviews","setPages","current","totalItems","pages","connect","state","reviews","filters","total","active_page","page","dispatch","getReviews","_page","getState","query","push","fetch","join","then","res","headers","get","json","catch","err","console","log","fetchReviews","useEffect","removeFilter","review","window","scrollTo","top","left","behavior","Boolean","location","hostname","match","default_state","action","links","split","link","URLSearchParams","parseInt","hasCurrent","some","reduce","ary","lastPage","filterExists","find","initialState","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,iSCI9BC,EAAW,CACvB,OAAUC,IACV,WAAcC,IACd,OAAUC,KC0CIC,G,MA1CA,SAAC,GAAD,IACdC,EADc,EACdA,SACAC,EAFc,EAEdA,MACAC,EAHc,EAGdA,QACAC,EAJc,EAIdA,QACAC,EALc,EAKdA,iBACAC,EANc,EAMdA,iBACAC,EAPc,EAOdA,OACAC,EARc,EAQdA,YACAC,EATc,EASdA,QATc,OAWb,iCACE,gCACE,0BACCC,UAAU,QACVD,QAAS,kBAAMA,EAAQ,QAASP,KAEhC,2BAAIA,GAJL,MAMA,yBACCS,IAAKf,EAASO,GACdS,IAAI,eACJH,QAAS,kBAAMA,EAAQ,UAAWN,MAEnC,4BAAKF,IAEP,iCACE,2BAAIG,GACJ,4BACEC,GAAoB,4BAAI,yBAAKM,IAAKE,IAASD,IAAI,gBAA3B,IAA6CP,GACjEC,GAAoB,4BAAI,yBAAKK,IAAKG,IAAWF,IAAI,mBAA7B,IAAkDN,KAG1E,gCACE,gCAASC,GACT,0CACU,kBAAC,IAAD,CAAQQ,OAAO,cAAcC,QAAQ,QAAQR,QCf9CS,EAzBA,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,EAAeT,EAAf,EAAeA,QAAf,OACZS,GAASA,EAAMC,OACX,yBAAKC,GAAG,UACP,4BAAQV,UAAU,QAAlB,gBACCQ,EAAMG,KAAI,SAACC,EAAQC,GAAT,OAEP,4BAAQC,IAAKD,EACXE,KAAK,SACLf,UAAU,kCAEO,UAAhBY,EAAOG,KACJ,8CAAS,2BAAIH,EAAOI,QACpB,yBAAKf,IAAKf,EAAS0B,EAAOI,OAAQd,IAAI,iBAE1C,0BACEF,UAAU,6BACVD,QAAS,kBAAMA,EAAQa,KAFzB,UAQR,MCVSK,EAbI,SAAC,GAAD,QAAGT,aAAH,MAAW,GAAX,EAAeU,EAAf,EAAeA,OAAQnB,EAAvB,EAAuBA,QAAvB,OACjB,yBAAKoB,aAAW,2BACd,wBAAInB,UAAU,iDACXQ,EAAMG,KAAI,SAACS,EAAMP,GAAP,OAAiB,wBAAIC,IAAKD,EACnCb,UAAS,oBAAeoB,EAAKC,MAAQH,EAAS,SAAW,IACzDnB,QAAS,kBAAOqB,EAAKC,MAAQH,EAAU,KAAOnB,EAAQqB,KAEpD,4BAAQpB,UAAU,aAAaoB,EAAKE,aCqBjCC,EAAa,SAACf,GAAD,MAAY,CACrCO,KA7ByB,aA8BzBP,UAaYgB,EAAW,SAACC,EAASC,EAAYC,GAAtB,MAAiC,CACxDZ,KA7CwB,YA8CxBY,QACAD,aACAD,YCQcG,G,MAAAA,aAAQ,SAAAC,GAAK,MAAK,CAC/BC,QAASD,EAAMrB,MACfuB,QAASF,EAAME,QACfC,MAAOH,EAAMG,MACbL,MAAOE,EAAMF,MACbM,YAAaJ,EAAMK,QALNN,EAjDH,SAAC,GAA+D,IAA7DO,EAA4D,EAA5DA,SAAUL,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOL,EAAyB,EAAzBA,MAAOM,EAAkB,EAAlBA,YAEjDG,EAAa,SAACF,GAAD,OAAUC,EDJH,WAAgB,IAAfE,EAAc,uDAAN,EACpC,OAAO,SAACF,EAAUG,GAAc,IAMzBC,GALcD,IAAZP,SAKkB,IAAIpB,KAAI,SAAAC,GAAM,gBAAOA,EAAOG,KAAd,YAAsBH,EAAOI,WAAY,GAIjF,OAHAuB,EAAMC,KAAK,YACXD,EAAMC,KAAN,gBAAoBH,IAEbI,MAAM,kDAAD,OAAmDF,EAAMG,KAAK,OACzEC,MAAK,SAAAC,GAEL,OADAT,EAASX,EAASa,EAAOO,EAAIC,QAAQC,IAAI,iBAAkBF,EAAIC,QAAQC,IAAI,UACpEF,EAAIG,UAEXJ,MAAK,SAAAC,GAAG,OAAIT,EAASZ,EAAWqB,OAChCI,OACA,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OCdkBG,CAAalB,KAYnD,OALAmB,qBAAU,WACRjB,MAEC,CAACD,EAAUJ,IAGZ,yBAAK/B,UAAU,aACb,8BACE,gCACE,0CACA,sDAEF,iCACE,4BAAKgC,EAAL,oBAAsBF,EAAQrB,OAAS,EAAI,IAAM,KAEjD,kBAAC,EAAD,CACED,MAAOuB,EACPhC,QAAS,SAACa,GAAD,OAAYuB,EDML,SAACvB,GAAD,MAAa,CACxCG,KArC4B,gBAsC5BH,UCRyC0C,CAAa1C,OAG5CkB,EAAQnB,KAAI,SAAC4C,EAAQ1C,GAAT,OACT,kBAAC,EAAD,eACEC,IAAKD,GACD0C,EAFN,CAGExD,QAAS,SAACgB,EAAMC,GAAP,OAAiBmB,EDNJ,CACrCpB,KAjCyB,aAkCzBH,OCI4D,CAACG,OAAMC,mBAI5D,4BAAQhB,UAAU,qCAChB,kBAAC,EAAD,CACEQ,MAAOmB,EACPT,OAAQe,EACRlC,QArCW,SAACmC,GACpBsB,OAAOC,SAAS,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,WAC7CxB,EAAWF,EAAKb,eCFAwC,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2D,iCChBAC,EAAgB,CACpBjC,MAAO,EACPE,KAAM,EACNP,MAAO,GACPI,QAAS,GACTvB,MAAO,IAgEMlB,MA7Df,WAAgD,IAAhCuC,EAA+B,uDAAvBoC,EAAeC,EAAQ,uCAC7C,OAAQA,EAAOnD,MACb,IHXqB,YGanB,IAAMoD,EAAQD,EAAOvC,MAAMyC,MAAM,KAC9BxD,QAAO,SAAAQ,GAAI,OAAIA,KACfT,KAAI,SAAAS,GACH,IAAMiD,EAAOjD,EAAKgD,MAAM,KACxB/C,EAAO,IAAIiD,gBAAgBD,EAAK,GAAGL,MAAM,UAAU,IAAIlB,IAAI,SAC3D,MAAO,CACLzB,IAAKkD,SAASlD,EAAK,IACnBC,KAAM+C,EAAK,GAAGL,MAAM,cAAc,OAGpCQ,EAAaL,EAAMM,MAAK,SAAAJ,GAAI,OAAIA,EAAKhD,MAAQ6C,EAAOzC,WAClDE,EAAQwC,EAAMO,QAAO,SAACC,EAAKN,GAC/B,IAAKG,GAAcH,EAAKhD,IAAM6C,EAAOzC,QAAS,CAC5C,IAAMmD,EAAWT,EAAMA,EAAM1D,OAAS,GAAGY,IAGzC,OAFAmD,GAAa,EAEP,GAAN,mBAAWG,GAAX,CAAgB,CACdtD,IAAK6C,EAAOzC,QACZH,KAAK,GAAD,OAAK4C,EAAOzC,QAAZ,YAAuBmD,IAC1BP,IAEL,MAAM,GAAN,mBAAWM,GAAX,CAAgBN,MACf,IAEH,OAAO,eACFxC,EADL,CAEEG,MAAOkC,EAAOxC,WACdQ,KAAMgC,EAAOzC,QACbE,MAAOA,IAEX,IHxCyB,gBGyCvB,OAAO,eACFE,EADL,CAEEE,QAASF,EAAME,QAAQnB,QAAO,SAAAA,GAAM,QAClCA,EAAOG,OAASmD,EAAOtD,OAAOG,MAC3BH,EAAOI,QAAUkD,EAAOtD,OAAOI,YAGxC,IHjDsB,aGkDpB,IAAM6D,EAAehD,EAAME,QAAQ+C,MAAK,SAAAlE,GAAM,OAC5CA,EAAOG,OAASmD,EAAOtD,OAAOG,MAC3BH,EAAOI,QAAUkD,EAAOtD,OAAOI,SAEpC,OAAO6D,EAAehD,EAAH,eACdA,EADc,CAEjBE,QAAQ,GAAD,mBAAMF,EAAME,SAAZ,CAAqBmC,EAAOtD,WAEvC,IH3DsB,aG4DpB,OAAO,eACFiB,EADL,CAEErB,MAAO0D,EAAO1D,QAElB,QACE,OAAOqB,IC3Db,ICJuCkD,EDIjCC,GCJiCD,EDIV,CAC5BvE,MAAO,GACPuB,QAAS,ICLKkD,YACbC,EACAH,EACAI,YAAgBC,ODMlBC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,IAAD,CAAUP,MAAOA,GAChB,kBAAC,EAAD,QAGDQ,SAASC,eAAe,SF+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEd9C,OAAM,SAAA+C,GACL7C,QAAQ6C,MAAMA,EAAMC,c","file":"static/js/main.1cf8312c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thumb-down.7802808d.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumb-up.962766a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/AIRBNB.c74888e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/BOOKINGCOM.315b7eac.svg\";","module.exports = __webpack_public_path__ + \"static/media/HOLIDU.5e3b3df4.svg\";","import AIRBNB from './icons/AIRBNB.svg';\nimport BOOKINGCOM from './icons/BOOKINGCOM.svg';\nimport HOLIDU from './icons/HOLIDU.svg';\n\nexport const iconsMap = {\n\t'AIRBNB': AIRBNB,\n\t'BOOKINGCOM': BOOKINGCOM,\n\t'HOLIDU': HOLIDU\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport thumbDown from '../../icons/thumb-down.svg';\nimport thumbUp from '../../icons/thumb-up.svg';\nimport { iconsMap } from '../../constant';\nimport './main.css';\n\nconst Review = ({\n\theadline,\n\tscore,\n\tchannel,\n\tcomment,\n\tpositiveFeedback,\n\tnegativeFeedback,\n\tauthor,\n\tpublishedAt,\n\tonClick,\n}) => (\n  <article>\n    <header>\n      <span \n      \tclassName=\"badge\"\n      \tonClick={() => onClick('score', score)}\n      >\n      \t<b>{score}</b>/5\n      </span>\n      <img \n      \tsrc={iconsMap[channel]}\n      \talt=\"website name\"\n      \tonClick={() => onClick('channel', channel)}\n      />\n      <h5>{headline}</h5>\n    </header>\n    <summary>\n      <p>{comment}</p>\n      <ul>\n      \t{positiveFeedback && <li><img src={thumbUp} alt=\"agree point\" /> {positiveFeedback}</li> }\n      \t{negativeFeedback && <li><img src={thumbDown} alt=\"disagree point\" /> {negativeFeedback}</li> }\n      </ul>\n    </summary>\n    <footer>\n      <strong>{author}</strong>\n      <time>\n      \tReviewed <Moment format=\"DD MMM YYYY\" element=\"span\">{publishedAt}</Moment>\n      </time>\n    </footer>\n  </article>\n)\n\nexport default Review;\n","import React from 'react';\nimport { iconsMap } from '../../constant';\n\nconst Filter = ({ items = [], onClick }) => (\n  (items && items.length)\n    ? (<div id=\"filter\">\n        <strong className=\"mr-2\">Filtered By:</strong>\n        {items.map((filter, index) => \n          (\n            <button key={index}\n              type=\"button\"\n              className=\"btn btn-sm btn-light mr-1 mb-1\"\n              >\n              {filter.type === \"score\"\n                ? <>Score: <b>{filter.value}</b></>\n                : <img src={iconsMap[filter.value]} alt=\"channel icon\" />\n              }\n              <span \n                className=\"ml-1 badge badge-secondary\"\n                onClick={() => onClick(filter)}\n                >X</span>\n            </button>\n          )\n        )}\n      </div>)\n    : null\n)\n\nexport default Filter;\n","import React from 'react';\n\nconst Pagination = ({ items = [], active, onClick }) => (\n  <nav aria-label=\"Page navigation example\">\n    <ul className=\"pagination  pagination-sm justify-content-end\">\n      {items.map((item, index) => <li key={index} \n        className={`page-item ${item.num === active ? 'active' : ''}`}\n        onClick={() => (item.num === active) ? null : onClick(item)}\n        >\n          <button className=\"page-link\">{item.text}</button>\n        </li>)}\n    </ul>\n  </nav>\n)\n\nexport default Pagination;\n","\nexport const SET_PAGES = 'SET_PAGES';\nexport const SET_REVIEW = 'SET_REVIEW';\nexport const ADD_FILTER = 'ADD_FILTER';\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\n\nexport const fetchReviews = (_page = 1) => {\n\treturn (dispatch, getState) => {\n\t\tconst { filters } = getState();\n\t\t// To READ\n\t\t// Also better to have a pattern for specifying\n\t\t// our API URL, as latter if it get complex, we\n\t\t// can easliy manage them\n\t\tconst query = (filters || []).map(filter => `${filter.type}=${filter.value}`) || [];\n\t\tquery.push('_limit=5');\n\t\tquery.push(`_page=${_page}`);\n\n\t\treturn fetch(`https://interview-task-api.bookiply.io/reviews?${query.join('&')}`)\n\t\t.then(res => {\n\t\t\tdispatch(setPages(_page, res.headers.get('X-Total-Count'), res.headers.get('Link')))\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(res => dispatch(setReviews(res)))\n\t\t.catch(\n\t\t\terr => console.log(err)\n\t\t\t// TODO handle later\n\t\t);\n\t}\n}\n\nexport const setReviews = (items) => ({\n\ttype: SET_REVIEW,\n\titems\n});\n\nexport const addFilter = (filter) => ({\n\ttype: ADD_FILTER,\n\tfilter\n});\n\nexport const removeFilter = (filter) => ({\n\ttype: REMOVE_FILTER,\n\tfilter\n});\n\nexport const setPages = (current, totalItems, pages) => ({\n\ttype: SET_PAGES,\n\tpages,\n\ttotalItems,\n\tcurrent\n});\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Review from '../../components/Review';\nimport Filter from '../../components/Filter';\nimport Pagination from '../../components/Pagination';\nimport { fetchReviews, addFilter, removeFilter } from '../../actions';\nimport './main.css';\n\nconst App = ({ dispatch, reviews, filters, total, pages, active_page }) => {\n\n  const getReviews = (page) => dispatch(fetchReviews(page));\n\n  const handlePaging = (page) => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n    getReviews(page.num);\n  }  \n\n  useEffect(() => {\n    getReviews();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, filters]); \n\n  return (\n    <div className=\"container\">\n      <main>\n        <header>\n          <h4>ID: 091021</h4>  \n          <h1>La Casa de las Flores</h1>\n        </header>\n        <section>\n          <h2>{total} {`Review${reviews.length > 1 ? 's' : ''}`}</h2>\n\n          <Filter\n            items={filters}\n            onClick={(filter) => dispatch(removeFilter(filter))}\n          />\n\n          {reviews.map((review, index) =>\n              <Review\n                key={index}\n                {...review}\n                onClick={(type, value) => dispatch(addFilter({type, value}))}\n              />\n          )}\n        </section>\n        <footer className=\"p-2 d-flex justify-content-center\">\n          <Pagination\n            items={pages}\n            active={active_page}\n            onClick={handlePaging}\n          />\n        </footer>\n      </main>\n    </div>\n  );\n}\n\nexport default connect(state => ({\n  reviews: state.items,\n  filters: state.filters,\n  total: state.total,\n  pages: state.pages,\n  active_page: state.page\n}))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_REVIEW, ADD_FILTER, REMOVE_FILTER, SET_PAGES } from '../actions';\n\nconst default_state = {\n  total: 1,\n  page: 1,\n  pages: [],\n  filters: [],\n  items: []\n};\n\nfunction Review(state = default_state, action) {\n  switch (action.type) {\n    case SET_PAGES:\n\n      const links = action.pages.split(',')\n        .filter(item => item)\n        .map(item => {\n          const link = item.split(';'),\n          num = (new URLSearchParams(link[0].match(\"<(.*)>\")[1]).get('_page'));\n          return {\n            num: parseInt(num, 10),\n            text: link[1].match('rel=\"(.*)\"')[1]\n          };\n        });\n      let hasCurrent = links.some(link => link.num === action.current);\n      const pages = links.reduce((ary, link) => {\n        if (!hasCurrent && link.num > action.current) {\n          const lastPage = links[links.length - 1].num;\n          hasCurrent = true;\n\n          return [...ary, {\n            num: action.current,\n            text: `${action.current}/${lastPage}`\n          }, link];\n        }\n        return [...ary, link];\n      }, []);\n\n      return {\n        ...state,\n        total: action.totalItems,\n        page: action.current,\n        pages: pages\n      };\n    case REMOVE_FILTER:\n      return {\n        ...state,\n        filters: state.filters.filter(filter => !(\n          filter.type === action.filter.type\n          && filter.value === action.filter.value\n        ))\n      };\n    case ADD_FILTER:\n      const filterExists = state.filters.find(filter => (\n        filter.type === action.filter.type\n        && filter.value === action.filter.value\n      ));\n      return filterExists ? state : {\n        ...state,\n        filters: [...state.filters, action.filter]\n      };\n    case SET_REVIEW:\n      return {\n        ...state,\n        items: action.items\n      };\n    default:\n      return state\n  }\n}\n\nexport default Review;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore.js';\n\nconst store = configureStore({\n\titems: [],\n\tfilters: []\n});\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState) {\n\tconst store = createStore(\n\t\trootReducer,\n\t\tinitialState,\n\t\tapplyMiddleware(thunk)\n\t);\n\n\tif (module.hot) {\n\t\t// Enable Webpack hot module replacement for reducers\n\t\tmodule.hot.accept('../reducers', () => {\n\t\t\tconst nextReducer = require('../reducers');\n\t\t\tstore.replaceReducer(nextReducer);\n\t\t});\n\t}\n\n  return store;\n}"],"sourceRoot":""}