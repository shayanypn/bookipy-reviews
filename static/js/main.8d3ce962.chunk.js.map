{"version":3,"sources":["icons/AIRBNB.svg","icons/thumb-down.svg","icons/thumb-up.svg","components/Review/index.js","actions/index.js","containers/App/index.js","serviceWorker.js","reducers/review.js","reducers/index.js","index.js","store/configureStore.js"],"names":["module","exports","Review","className","src","AIRBNB","alt","thumbUp","thumbDown","setReviews","items","type","connect","state","reviews","review","isFiltering","filters","length","dispatch","useEffect","fetch","then","res","json","catch","err","console","log","map","index","key","item","aria-label","href","tabIndex","aria-disabled","Boolean","window","location","hostname","match","default_state","action","rootReducer","combineReducers","initialState","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8d3ce962.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AIRBNB.c74888e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumb-down.7802808d.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumb-up.962766a5.svg\";","import React from 'react';\nimport thumbDown from '../../icons/thumb-down.svg';\nimport thumbUp from '../../icons/thumb-up.svg';\nimport AIRBNB from '../../icons/AIRBNB.svg';\nimport './main.css';\n\nconst Review = () => {\n  return (\n    <article>\n    \t<header>\n\t\t\t<span className=\"badge\"><b>4.3</b>/5</span>\n\t\t\t<img src={AIRBNB} alt=\"website name\" />\n\t\t\t<h5>Very nice host, and quite chill place.!</h5>\n    \t</header>\n    \t<summary>\n\t\t\t<p>Morbi porttitor nisl ipsum, a facilisis purus euismod eu. Praesent consequat interdum nisi ut auctor. Sed posuere est porta neque pretium viverra. Nulla vel finibus nulla.</p>\n\t\t\t<ul>\n\t\t\t\t<li><img src={thumbUp} alt=\"agree point\" /> Nulla dictum ligula ac tortor egestas, sit amet ullamcorper risus sollicitudin. Morbi vitae leo accumsan, interdum ligula non, placerat ligula. Ut faucibus congue purus, vitae semper</li>\n\t\t\t\t<li><img src={thumbDown} alt=\"disagree point\" /> Nulla dictum ligula ac tortor egestas, sit amet ullamcorper risus sollicitudin. Morbi vitae leo accumsan, interdum ligula non, placerat ligula. Ut faucibus congue purus, vitae semper</li>\n\t\t\t</ul>\n    \t</summary>\n\t\t<footer>\n\t\t\t<strong>Alissa Stacey</strong>\n\t\t\t<time>Reviewed 13 December 2019</time>\n\t\t</footer>\n    </article>\n  );\n}\n\nexport default Review;\n","\nexport const SET_REVIEW = 'SET_REVIEW';\n\nexport const fetchReviews = (items) => {\n\treturn dispatch => {\n\t\t// To READ\n\t\t// Also better to have a pattern for specifying\n\t\t// our API URL, as latter if it get complex, we\n\t\t// can easliy manage them\n\t\treturn fetch('https://interview-task-api.bookiply.io/reviews')\n\t\t.then(res => res.json())\n\t\t.then(res => {\n\t\t\tdispatch(setReviews(res))\n\t\t})\n\t\t.catch(\n\t\t\terr => console.log(err)\n\t\t\t// TODO handle later\n\t\t);\n\t}\n}\n\nexport const setReviews = (items) => ({\n\ttype: SET_REVIEW,\n\titems\n});\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Review from '../../components/Review';\nimport AIRBNB from '../../icons/AIRBNB.svg';\nimport { fetchReviews } from '../../actions';\nimport './main.css';\n\nconst App = ({ dispatch, reviews, isFiltering }) => {\n  useEffect(() => {\n    dispatch(fetchReviews());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <main>\n        <header>\n          <h4>ID: 091021</h4>  \n          <h1>La Casa de las Flores</h1>\n        </header>\n        <section>\n          <h2>{reviews.length} {`Review${reviews.length > 1 ? 's' : ''}`}</h2>\n          {isFiltering && (<div>\n            <strong className=\"mr-2\">Filtered By:</strong>\n            <button type=\"button\" className=\"btn btn-sm btn-light mr-1 mb-1\">\n              Score: <b>4.3</b> <span className=\"badge badge-secondary\">X</span>\n            </button>\n            <button type=\"button\" className=\"btn btn-sm btn-light mr-1 mb-1\">\n              <img src={AIRBNB} alt=\"channel icon\" /> <span className=\"badge badge-secondary\">X</span>\n            </button>\n          </div>)}\n          \n          {reviews.map((review, index) => <Review key={index} item={review} />)}\n        </section>\n        <footer className=\"p-2 d-flex justify-content-center\">\n          <nav aria-label=\"Page navigation example\">\n            <ul className=\"pagination justify-content-end\">\n              <li className=\"page-item disabled\">\n                <a className=\"page-link\" href=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">Previous</a>\n              </li>\n              <li className=\"page-item\"><a className=\"page-link\" href=\"/\">1</a></li>\n              <li className=\"page-item\"><a className=\"page-link\" href=\"/\">2</a></li>\n              <li className=\"page-item\"><a className=\"page-link\" href=\"/\">3</a></li>\n              <li className=\"page-item\">\n                <a className=\"page-link\" href=\"/\">Next</a>\n              </li>\n            </ul>\n          </nav>\n        </footer>\n      </main>\n    </div>\n  );\n}\n\nexport default connect(state => ({\n  reviews: state.review.items,\n  isFiltering: state.review.filters.length > 0\n}))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_REVIEW } from '../actions';\n\nconst default_state = {\n  filters: [],\n  items: []\n};\n\nfunction Review(state = default_state, action) {\n  switch (action.type) {\n    case SET_REVIEW:\n      return {\n        ...state,\n        items: action.items\n      }\n    default:\n      return state\n  }\n}\n\nexport default Review;","import { combineReducers } from 'redux';\nimport review from './review';\n\n// Just to show the case, when we \n// have more reduce, otherwise we \n// don't need this\nconst rootReducer = combineReducers({\n\treview,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore.js';\n\nconst store = configureStore({});\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState) {\n\tconst store = createStore(\n\t\trootReducer,\n\t\tinitialState,\n\t\tapplyMiddleware(thunk)\n\t);\n\n\tif (module.hot) {\n\t\t// Enable Webpack hot module replacement for reducers\n\t\tmodule.hot.accept('../reducers', () => {\n\t\t\tconst nextReducer = require('../reducers');\n\t\t\tstore.replaceReducer(nextReducer);\n\t\t});\n\t}\n\n  return store;\n}"],"sourceRoot":""}