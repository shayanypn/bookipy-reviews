{"version":3,"sources":["icons/AIRBNB.svg","icons/thumb-down.svg","icons/thumb-up.svg","components/Review/index.js","components/Review/Review.js","containers/App/index.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Review","className","src","AIRBNB","alt","thumbUp","thumbDown","App","type","aria-label","href","tabIndex","aria-disabled","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,oC,kBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,iOCE5BC,ECIA,WACb,OACE,iCACC,gCACF,0BAAMC,UAAU,SAAQ,kCAAxB,MACA,yBAAKC,IAAKC,IAAQC,IAAI,iBACtB,wEAEE,iCACF,0MACA,4BACC,4BAAI,yBAAKF,IAAKG,IAASD,IAAI,gBAA3B,2LACA,4BAAI,yBAAKF,IAAKI,IAAWF,IAAI,mBAA7B,6LAGF,gCACC,iDACA,8DCrBYG,G,MCGH,WACV,OACE,yBAAKN,UAAU,aACb,8BACE,gCACE,0CACA,sDAEF,iCACE,0CACA,6BACE,4BAAQA,UAAU,QAAlB,gBACA,4BAAQO,KAAK,SAASP,UAAU,kCAAhC,UACS,kCADT,IACoB,0BAAMA,UAAU,yBAAhB,MAEpB,4BAAQO,KAAK,SAASP,UAAU,kCAC9B,yBAAKC,IAAKC,IAAQC,IAAI,iBADxB,IAC0C,0BAAMH,UAAU,yBAAhB,OAG5C,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,4BAAQA,UAAU,qCAChB,yBAAKQ,aAAW,2BACd,wBAAIR,UAAU,kCACZ,wBAAIA,UAAU,sBACZ,uBAAGA,UAAU,YAAYS,KAAK,IAAIC,SAAS,KAAKC,gBAAc,QAA9D,aAEF,wBAAIX,UAAU,aAAY,uBAAGA,UAAU,YAAYS,KAAK,KAA9B,MAC1B,wBAAIT,UAAU,aAAY,uBAAGA,UAAU,YAAYS,KAAK,KAA9B,MAC1B,wBAAIT,UAAU,aAAY,uBAAGA,UAAU,YAAYS,KAAK,KAA9B,MAC1B,wBAAIT,UAAU,aACZ,uBAAGA,UAAU,YAAYS,KAAK,KAA9B,gBC7BIG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.01be2dd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AIRBNB.c74888e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumb-down.7802808d.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumb-up.962766a5.svg\";","import Review from './Review';\n\nexport default Review;","import React from 'react';\nimport './review.css';\nimport thumbDown from '../../icons/thumb-down.svg';\nimport thumbUp from '../../icons/thumb-up.svg';\nimport AIRBNB from '../../icons/AIRBNB.svg';\n\nconst Review = () => {\n  return (\n    <article>\n    \t<header>\n\t\t\t<span className=\"badge\"><b>4.3</b>/5</span>\n\t\t\t<img src={AIRBNB} alt=\"website name\" />\n\t\t\t<h5>Very nice host, and quite chill place.!</h5>\n    \t</header>\n    \t<summary>\n\t\t\t<p>Morbi porttitor nisl ipsum, a facilisis purus euismod eu. Praesent consequat interdum nisi ut auctor. Sed posuere est porta neque pretium viverra. Nulla vel finibus nulla.</p>\n\t\t\t<ul>\n\t\t\t\t<li><img src={thumbUp} alt=\"agree point\" /> Nulla dictum ligula ac tortor egestas, sit amet ullamcorper risus sollicitudin. Morbi vitae leo accumsan, interdum ligula non, placerat ligula. Ut faucibus congue purus, vitae semper</li>\n\t\t\t\t<li><img src={thumbDown} alt=\"disagree point\" /> Nulla dictum ligula ac tortor egestas, sit amet ullamcorper risus sollicitudin. Morbi vitae leo accumsan, interdum ligula non, placerat ligula. Ut faucibus congue purus, vitae semper</li>\n\t\t\t</ul>\n    \t</summary>\n\t\t<footer>\n\t\t\t<strong>Alissa Stacey</strong>\n\t\t\t<time>Reviewed 13 December 2019</time>\n\t\t</footer>\n    </article>\n  );\n}\n\nexport default Review;\n","import App from './App';\n\nexport default App;","import React from 'react';\nimport Review from '../../components/Review';\nimport './app.css';\nimport AIRBNB from '../../icons/AIRBNB.svg';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <main>\n        <header>\n          <h4>ID: 091021</h4>  \n          <h1>La Casa de las Flores</h1>\n        </header>\n        <section>\n          <h2>17 Reviews</h2>\n          <div>\n            <strong className=\"mr-2\">Filtered By:</strong>\n            <button type=\"button\" className=\"btn btn-sm btn-light mr-1 mb-1\">\n              Score: <b>4.3</b> <span className=\"badge badge-secondary\">X</span>\n            </button>\n            <button type=\"button\" className=\"btn btn-sm btn-light mr-1 mb-1\">\n              <img src={AIRBNB} alt=\"channel icon\" /> <span className=\"badge badge-secondary\">X</span>\n            </button>\n          </div>\n          <Review />\n          <Review />\n          <Review />\n          <Review />\n          <Review />\n          <Review />\n        </section>\n        <footer className=\"p-2 d-flex justify-content-center\">\n          <nav aria-label=\"Page navigation example\">\n            <ul className=\"pagination justify-content-end\">\n              <li className=\"page-item disabled\">\n                <a className=\"page-link\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Previous</a>\n              </li>\n              <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n              <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n              <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n              <li className=\"page-item\">\n                <a className=\"page-link\" href=\"#\">Next</a>\n              </li>\n            </ul>\n          </nav>\n        </footer>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}